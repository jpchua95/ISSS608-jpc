---
title: "Hands-On Exercise 02: Beyond ggplot2 Fundamentals"
author: "Jia Peng Chua"
date-modified: "last-modified"
execute:
    echo: true
    eval: true
    warning: false
    freeze: true
---

## 1. Getting Started

In this exercise, learn about more exciting and useful functions of ggplot2.

To get started, we load the necessary packages into R environment using the code chunk below.

```{r}
pacman::p_load(ggrepel, patchwork, 
               ggthemes, hrbrthemes,
               tidyverse) 
```

## 2. Importing Data

The code chunk below uses read_csv() of readr to import the Exam_data dataset into R environment.

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

## 3. Beyond ggplot2 Annotation: ggrepel

One of the challenge in plotting statistical graph is annotation, especially with large number of data points.

::: panel-tabset
#### The Plot

```{r}
#| echo: FALSE
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label(aes(label = ID), 
             hjust = .5, 
             vjust = -.5) +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```

#### The Code

```{r}
#| eval: FALSE
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label(aes(label = ID), 
             hjust = .5, 
             vjust = -.5) +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```
:::

### 3.1 ggrepel came to the rescue

ggrepel is an extension of ggplot2 package which provides geoms for ggplot2 to repel overlapping text as in our examples above.

::: callout-note
Read more about ggrepel \[here\](<https://ggrepel.slowkow.com/>).
:::

This can be done by simply replacing:

-   `geom_text()` by `geom_text_repel()`

-   `geom_label()` by `geom_label_repel()`

::: panel-tabset
#### The Plot

```{r}
#| echo: FALSE
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label_repel(aes(label = ID), 
                   fontface = "bold") +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```

#### The Code

```{r}
#| eval: FALSE
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label_repel(aes(label = ID), 
                   fontface = "bold") +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```
:::

## 4.Beyond ggplot2 Themes

ggplot2 comes with eight built-in themes, they are:

-   `theme_gray()`

-   `theme_bw()`

-   `theme_classic()`

-   `theme_dark()`

-   `theme_light()`

-   `theme_linedraw()`

-   `theme_minimal()`

-   `theme_void()`

::: panel-tabset
#### The Plot

```{r}
#| echo: FALSE
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_gray() +
  ggtitle("Distribution of Maths scores") 
```

#### The Code

```{r}
#| eval: FALSE
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_gray() +
  ggtitle("Distribution of Maths scores") 
```
:::

::: callout-note
Read more about built-in themes [here](https://ggplot2.tidyverse.org/reference/ggtheme.html). Read more about ggplot2 themes [here](https://ggplot2.tidyverse.org/reference/#themes).
:::

### 4.1 ggtheme Package

In the following code chunk, The Economist theme is used.

::: panel-tabset
#### The Plot

```{r}
#| echo: FALSE
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_economist()
```

#### The Code

```{r}
#| eval: FALSE
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_economist()
```
:::

### 4.2 hrbthemes Package

hrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.

::: panel-tabset
#### The Plot

```{r}
#| echo: FALSE
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum()
```

#### The Code

```{r}
#| eval: FALSE
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum()
```
:::

The second goal centers around productivity for a production workflow. In fact, this “production workflow” is the context for where the elements of hrbrthemes should be used.

::: panel-tabset
#### The Plot

```{r}
#| echo: FALSE
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum(axis_title_size = 18,
              base_size = 15,
              grid = "Y")
```

#### The Code

```{r}
#| eval: FALSE
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum(axis_title_size = 18,
              base_size = 15,
              grid = "Y")
```
:::

## 5. Beyond Single Graph

There are several ggplot2 extensions provide functions to compose figure with multiple graphs. First, we create three statistical graphics with the code chunk below.

Maths:

::: panel-tabset
#### The Plot

```{r}
#| echo: FALSE
p1 <- ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") + 
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of Maths scores")

p1
```

#### The Code

```{r}
#| eval: FALSE
p1 <- ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") + 
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of Maths scores")
```
:::

English:

::: panel-tabset
#### The Plot

```{r}
#| echo: FALSE
p2 <- ggplot(data=exam_data, 
             aes(x = ENGLISH)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of English scores")

p2
```

#### The Code

```{r}
#| eval: FALSE
p2 <- ggplot(data=exam_data, 
             aes(x = ENGLISH)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of English scores")
```
:::

A scatterplot for English vs Maths score:

::: panel-tabset
#### The Plot

```{r}
#| echo: FALSE
p3 <- ggplot(data=exam_data, 
             aes(x= MATHS, 
                 y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")

p3
```

#### The Code

```{r}
#| eval: FALSE
p3 <- ggplot(data=exam_data, 
             aes(x= MATHS, 
                 y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```
:::

### 5.1 Creating Composite Graphics: pathwork methods

There are several ggplot2 extension’s functions support the needs to prepare composite figure by combining several graphs such as:

-   `grid.arrange()` of gridExtra package. Read more about it [here](https://cran.r-project.org/web/packages/gridExtra/vignettes/arrangeGrob.html).

-   `plot_grid()` of [cowplot](https://wilkelab.org/cowplot/) package. Read more about it [here](https://wilkelab.org/cowplot/reference/plot_grid.html).

Patchwork which is specially designed for combining separate ggplot2 graphs into a single figure:

-   Two-Column Layout using the Plus Sign +

-   Parenthesis () to create a subplot group

-   Two-Row Layout using the Division Sign /

::: callout-note
Read more about patchwork [here](https://patchwork.data-imaginist.com/).
:::

### 5.2 Combining two ggplot2 graphs

Composite of 2 histograms using patchwork.

::: panel-tabset
#### The Plot

```{r}
#| echo: FALSE
p1 + p2
```

#### The Code

```{r}
#| eval: FALSE
p1 + p2
```
:::

### 5.3: Combining three ggplot2 graphs

We can plot more complex composite by using appropriate operators:

-   “/” operator to stack two ggplot2 graphs

-   “\|” operator to place the plots beside each other

-   “()” operator the define the sequence of the plotting

::: panel-tabset
#### The Plot

```{r}
#| echo: FALSE
(p1 / p2) | p3
```

#### The Code

```{r}
#| eval: FALSE
(p1 / p2) | p3
```
:::

### 5.4 Creating a composite figure with tag

In order to identify subplots in text, patchwork also provides auto-tagging capabilities

::: panel-tabset
#### The Plot

```{r}
#| echo: FALSE
((p1 / p2) | p3) + 
  plot_annotation(tag_levels = 'I')
```

#### The Code

```{r}
#| eval: FALSE
((p1 / p2) | p3) + 
  plot_annotation(tag_levels = 'I')
```
:::

### 5.5 Creating figure with insert

With the `inset_element()`, we can place one or several plots or graphic elements freely on top or below another plot.

::: panel-tabset
#### The Plot

```{r}
#| echo: FALSE
p3 + inset_element(p2, 
                   left = 0.02, 
                   bottom = 0.7, 
                   right = 0.5, 
                   top = 1)
```

#### The Code

```{r}
#| eval: FALSE
p3 + inset_element(p2, 
                   left = 0.02, 
                   bottom = 0.7, 
                   right = 0.5, 
                   top = 1)
```
:::

### 5.6 Creating a composite figure by using patchwork and ggtheme

Figure below is created by combining patchwork and theme_economist() of ggthemes package.

::: panel-tabset
#### The Plot

```{r}
#| echo: FALSE
patchwork <- (p1 / p2) | p3
patchwork & theme_economist()
```

#### The Code

```{r}
#| eval: FALSE
patchwork <- (p1 / p2) | p3
patchwork & theme_economist()
```
:::

[^1]

[^1]: This document was completed with reference to:

    -   Prof Kam's notes \[2 Beyond ggplot2 Fundamentals\](<https://r4va.netlify.app/chap02>)
