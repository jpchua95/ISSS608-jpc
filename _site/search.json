[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608 Jia Peng Tiny World",
    "section": "",
    "text": "Welcome JP’s Visual Analytics World!"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "I’m JP, hi nice to meet you."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html",
    "href": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html",
    "title": "Hands-On Exercise 00: Working with Tidyverse",
    "section": "",
    "text": "Loading tidyverse into R environment by using the code chunk below.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#getting-started",
    "title": "Hands-On Exercise 00: Working with Tidyverse",
    "section": "",
    "text": "Loading tidyverse into R environment by using the code chunk below.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#importing-data",
    "title": "Hands-On Exercise 00: Working with Tidyverse",
    "section": "Importing data",
    "text": "Importing data\nCode chunk below uses read_csv() of readr to import REALIS2019.csv into R environment as a tibble data.frame.\n\nrealis2019 &lt;- read_csv(\"data/REALIS2019.csv\")\n\n\npopdata_fat &lt;- read_csv(\"data/PopData2019_fat.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#pivoting-data",
    "href": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#pivoting-data",
    "title": "Hands-On Exercise 00: Working with Tidyverse",
    "section": "Pivoting data",
    "text": "Pivoting data\n\npopdata_long &lt;- popdata_fat %&gt;%\n    pivot_longer(c(3:21),\n                 names_to = \"Age Group\",\n                 values_to = \"Population\")\n\n\nwrite_rds(popdata_long, \"rds/popdata_long.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#working-with-dplyr",
    "href": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#working-with-dplyr",
    "title": "Hands-On Exercise 00: Working with Tidyverse",
    "section": "Working with dplyr",
    "text": "Working with dplyr\n\nrealis2019_selected &lt;- realis2019 %&gt;%\n    select(`Project Name`,\n           `Transacted Price ($)`,\n           `Type of Sale`,\n           `Unit Price ($ psm)`,\n           `Property Type`)\nrealis2019_selected\n\n# A tibble: 19,515 × 5\n   `Project Name`     `Transacted Price ($)` `Type of Sale` `Unit Price ($ psm)`\n   &lt;chr&gt;                               &lt;dbl&gt; &lt;chr&gt;                         &lt;dbl&gt;\n 1 PEIRCE VIEW                        840000 Resale                         7434\n 2 FLORIDA PARK                      3040000 Resale                         9737\n 3 BULLION PARK                       860000 Resale                        11467\n 4 CASTLE GREEN                      1000000 Resale                         9346\n 5 HAPPY ESTATE                      7000000 Resale                        10183\n 6 TEACHER'S HOUSING…                2880000 Resale                        12659\n 7 THE PANORAMA                      1510000 Resale                        16064\n 8 THE PANORAMA                       710000 Resale                        16905\n 9 CHIP THYE GARDEN                  2800000 Resale                        13500\n10 TEACHER'S HOUSING…                2300000 Resale                         9935\n# ℹ 19,505 more rows\n# ℹ 1 more variable: `Property Type` &lt;chr&gt;\n\n\n\nWorking with filter() of dplyr\n\nrealis2019_filtered &lt;- realis2019_selected %&gt;%\n    filter(`Property Type` == \"Condominium\" |\n               `Property Type` == \"Apartment\") %&gt;%\n    filter(`Type of Sale` == \"New Sale\") %&gt;%\n    filter(`Unit Price ($ psm)` &lt;= 13000)\n\n\n\nPutting all together\n\nrealis2019_end &lt;- realis2019 %&gt;%\n    select(`Project Name`,\n           `Transacted Price ($)`,\n           `Type of Sale`,\n           `Unit Price ($ psm)`,\n           `Property Type`) %&gt;%\n    filter(`Property Type` == \"Condominium\" |\n               `Property Type` == \"Apartment\") %&gt;%\n    filter(`Type of Sale` == \"New Sale\") %&gt;%\n    filter(`Unit Price ($ psm)` &lt;= 13000)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-On Exercise 01: Working with Tidyverse",
    "section": "",
    "text": "Loading tidyverse into R environment by using the code chunk below.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#getting-started",
    "title": "Hands-On Exercise 01: Working with Tidyverse",
    "section": "",
    "text": "Loading tidyverse into R environment by using the code chunk below.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-data",
    "title": "Hands-On Exercise 01: Working with Tidyverse",
    "section": "Importing data",
    "text": "Importing data\nCode chunk below uses read_csv() of readr to import the Exam_data dataset into R environment.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#compare-r-graphics-with-ggplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#compare-r-graphics-with-ggplot",
    "title": "Hands-On Exercise 01: Working with Tidyverse",
    "section": "Compare R Graphics with ggplot",
    "text": "Compare R Graphics with ggplot\n\nR Graphicsggplot2\n\n\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\n\n\n\n\nFrom Prof Kam’s notes, ggplot2 is an implementation of Leland Wilkinson’s Grammar of Graphics. Figure below shows the seven grammars of ggplot2.\n\nA short description of each building block is as follow:\n\nData: The dataset being plotted.\nAesthetics: Take attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.\nGeometrics: The visual elements used for our data, such as point, bar or line.\nFacets: Split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\nStatistics: Statiscal transformations that summarise data (e.g. mean, confidence intervals).\nCoordinate systems: Define the plane on which data are mapped on the graphic.\nThemes: Modify all non-data components of a plot, such as main title, sub-title, y-aixs title, or legend background."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2",
    "title": "Hands-On Exercise 01: Working with Tidyverse",
    "section": "Essential Grammatical Elements in ggplot2",
    "text": "Essential Grammatical Elements in ggplot2\nWhen calling ggplot with just the data argument, a blank canvas would return as it initialises the ggplot object. This specifies the dataset to be used for the plot.\n\nggplot(data=exam_data)\n\n\n\n\n\n\n\n\nBy including the aes argument, we include the x-axis and the axis’ label.\n\nggplot(data=exam_data, aes(x= MATHS))\n\n\n\n\n\n\n\n\nNext, we look at adding geometric objects to the graph. We can create layers using a geom_ function. The full list can be found here.\n\nGeometric Objects: geom_bar()\nThe code chunk below plots a bar chart using geom_bar():\n\nggplot(data=exam_data, aes(x= RACE)) + geom_bar()\n\n\n\n\n\n\n\n\n\n\nGeometric Objects: geom_dotplot()\nThe code chunk below plots a dot plot using geom_dotplot():\n\nggplot(data=exam_data, aes(x= MATHS)) + geom_dotplot(dotsize = 0.5)\n\n\n\n\n\n\n\n\nThe code chunk below turns off the y-axis with scale_y_continuous and changes the binwidth to 2.5.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)  \n\n\n\n\n\n\n\n\n\n\nGeometric Objects: geom_histogram()\nThe code chunk below plots a histogram using geom_histogram():\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()       \n\n\n\n\n\n\n\n\n\n\nModifying a geometric object by changing geom()\nNext, we explore the various elements by changing the arguments in geom:\n\nbins: change the number of bins\nfill: shade the histogram\ncolor: changes the outline color of the bars\n\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")  \n\n\n\n\n\n\n\n\n\n\nModifying a geometric object by changing geom()\nNext, we explore the various elements by changing the arguments in aes:\n\nfill: changes the interior colour of the histogram\n\nHere, we need to specify the sub-group\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")"
  }
]