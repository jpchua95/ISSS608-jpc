{
  "hash": "8c13a2bce8fdec15bd47248e71453b70",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-On Exercise 01: Working with Tidyverse\"\nauthor: \"Jia Peng Chua\"\ndate-modified: \"last-modified\"\nexecute:\n    echo: true\n    eval: true\n    warning: false\n    freeze: true\n---\n\n\n\n## GETTING STARTED\n\nLoading tidyverse into R environment by using the code chunk below.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse)\n```\n:::\n\n\n\n## Importing data\n\nCode chunk below uses read_csv() of readr to import the Exam_data dataset into R environment.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_data <- read_csv(\"data/Exam_data.csv\")\n```\n:::\n\n\n\n## Compare R Graphics with ggplot\n\n::: panel-tabset\n### R Graphics\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(exam_data$MATHS)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n### ggplot2\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n:::\n\nFrom Prof Kam's notes, ggplot2 is an implementation of Leland Wilkinsonâ€™s Grammar of Graphics. Figure below shows the seven grammars of ggplot2.\n\n![](grammar%20of%20graphics.jpg)\n\nA short description of each building block is as follow:\n\n-   **Data**: The dataset being plotted.\n\n-   **Aesthetics**: Take attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.\n\n-   **Geometrics**: The visual elements used for our data, such as point, bar or line.\n\n-   **Facets**: Split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\n\n-   **Statistics**: Statiscal transformations that summarise data (e.g. mean, confidence intervals).\n\n-   **Coordinate systems**: Define the plane on which data are mapped on the graphic.\n\n-   **Themes**: Modify all non-data components of a plot, such as main title, sub-title, y-aixs title, or legend background.\n\n## Essential Grammatical Elements in ggplot2\n\nWhen calling ggplot with just the `data` argument, a blank canvas would return as it initialises the ggplot object. This specifies the dataset to be used for the plot.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\nBy including the `aes` argument, we include the x-axis and the axis' label.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, aes(x= MATHS))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\nNext, we look at adding geometric objects to the graph. We can create layers using a `geom_` function. The full list can be found [here](https://ggplot2.tidyverse.org/reference/#section-layer-geoms).\n\n### Geometric Objects: geom_bar()\n\nThe code chunk below plots a bar chart using `geom_bar()`:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, aes(x= RACE)) + geom_bar()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n### Geometric Objects: geom_dotplot()\n\nThe code chunk below plots a dot plot using `geom_dotplot()`:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, aes(x= MATHS)) + geom_dotplot(dotsize = 0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\nThe code chunk below turns off the y-axis with `scale_y_continuous` and changes the binwidth to 2.5.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)  \n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n### Geometric Objects: geom_histogram()\n\nThe code chunk below plots a histogram using `geom_histogram()`:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()       \n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n### Modifying a geometric object by changing geom()\n\nNext, we explore the various elements by changing the arguments in `geom`:\n\n-   *bins*: change the number of bins\n\n-   *fill*: shade the histogram\n\n-   *color*: changes the outline color of the bars\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")  \n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n### Modifying a geometric object by changing geom()\n\nNext, we explore the various elements by changing the arguments in `aes`:\n\n-   *fill*: changes the interior colour of the histogram\n\n    -   Here, we need to specify the sub-group\n    \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Hands-on_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}